# Basic EWASM interface test fro ADDRESS
---
callNotEnoughBalance:
  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: '0x020000'
    currentGasLimit: '89128960'
    currentNumber: '1'
    currentTimestamp: '1000'
    previousHash: 5e20a0453cecd065ea59c37ac63e079ee08998b6045136a8ce6635c7912ec0b6
  pre:
    a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: '100000000000'
      code: ''
      nonce: '0'
      storage: {}
    deadbeef00000000000000000000000000000000:
      balance: '100'
      code: |
        (module
          (import "ethereum" "call" (func $call (param i64 i32 i32 i32 i32 i32 i32) (result i32)))
          (import "ethereum" "getBalance" (func $getBalance (param i32 i32)))
          (import "debug" "printMemHex" (func $printMemHex (param i32  i32)))
          (memory 1)
          (export "main" (func $main))
          (export "memory" (memory 0))
          (data (i32.const 0) "\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ef\be\ad\de")
          (data (i32.const 20) "\20\a1\07\00\00\00\00\00\00\00\00\00\00\00\00\00") ;; current balance is 100, sending value 0x7a120 (500000)          
          (func $main
            (call $printMemHex (i32.const 20) (i32.const 32))
            ;;(call $getBalance (i32.const 0) (i32.const 20))
            ;;(call $printMemHex (i32.const 20) (i32.const 32))            
            (i32.store (i32.const 56)
              (call $call (i64.const 200000) ;; gas
                          (i32.const 0)      ;; addressOffset
                          (i32.const 20)     ;; valueOffset
                          (i32.const 52)     ;; data(0)
                          (i32.const 4)      ;; dataLength
                          (i32.const 56)     ;; resultOffset
                          (i32.const 4) ))   ;; resultLength
                          ))
      storage: {}
      nonce: ''
    deadbeef00000000000000000000000000000001:
      balance: '100000000000'
      code: |
        (module
          (import "ethereum" "storageStore" (func $storageStore (param i32 i32)))
          (import "ethereum" "getCallValue"   (func $getCallValue   (param i32)))
          (import "debug" "printMemHex" (func $printMemHex (param i32 i32)))
          (memory 1)
          (export "main" (func $main))
          (export "memory" (memory 0))
          (func $main
            (local $addrOffset i32)
            (local $keyOffset  i32)
            (set_local $addrOffset (i32.const 32))
            (set_local $keyOffset  (i32.const 0))
            ;;(call $printMemHex (get_local $addrOffset) (i32.const 32))
            (call $getCallValue   (get_local $addrOffset))
            ;;(call $printMemHex (get_local $addrOffset) (i32.const 32))            
            (call $storageStore (get_local $keyOffset) (get_local $addrOffset))))
      nonce: ''
      storage: {}
  expect:
    - indexes:
        data: !!int -1
        gas:  !!int -1
        value: !!int -1
      network:
        - ALL
      result:
        deadbeef00000000000000000000000000000001:
          storage: {
            0: '0x'
          }
  transaction:
    data:
    - ''
    gasLimit:
    - '0x5000001'
    gasPrice: '0x01'
    nonce: '0x00'
    secretKey: 45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8
    to: 'deadbeef00000000000000000000000000000000'
    value:
    - '1'
